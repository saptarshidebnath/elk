version: '3.2'

services:
  elasticsearch:
    container_name: ${COMPOSE_PROJECT_NAME}-elasticsearch
    build:
      context: elasticsearch/
      # Passes the ELK_VERSION from .env file
      args:
        ELK_VERSION: $ELK_VERSION
    # Loads the local config file to the given target path in the docker container
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
    # creates a docker volume on local machine, the data from container is stored here
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    # Exposes ports 9200 and 9300 
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      # ES_JAVA_OPTS: "-Xmx1024m -Xms512m"
      # remove the comment to the ELASTIC_PASSWORD argument to enable xpack 
      # ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    restart: unless-stopped  
    networks:
      - elk_net
    deploy: 
      resources:
        limits:
          memory: 1G

  kibana:
    container_name: ${COMPOSE_PROJECT_NAME}-kibana
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "${IP4_ADDR}:5601:5601"
    restart: unless-stopped
    networks:
      - elk_net
    depends_on:
      - elasticsearch
    deploy: 
      resources:
        limits:
          memory: 256M

networks:
  elk_net:
    name: elk_net
    driver: bridge

volumes:
  elasticsearch:
